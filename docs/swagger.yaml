basePath: /
definitions:
  handlers.CreateCustomerRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
      phone:
        type: string
    required:
    - email
    - name
    - password
    type: object
  handlers.CreatePackRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        minimum: 0
        type: number
      sku:
        type: string
      validity_months:
        maximum: 12
        minimum: 1
        type: integer
    required:
    - name
    - price
    - sku
    - validity_months
    type: object
  handlers.CreateSubscriptionRequest:
    properties:
      customer_id:
        type: integer
      pack_sku:
        type: string
    required:
    - customer_id
    - pack_sku
    type: object
  handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.SignupRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
      phone:
        type: string
    required:
    - email
    - name
    - password
    type: object
  handlers.SubscriptionRequest:
    properties:
      pack_sku:
        type: string
    required:
    - pack_sku
    type: object
  handlers.UpdateCustomerRequest:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
  handlers.UpdatePackRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        minimum: 0
        type: number
      validity_months:
        maximum: 12
        minimum: 1
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A comprehensive license management system with admin and customer portals,
    plus SDK integration
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: License Management System API
  version: "1.0"
paths:
  /api/admin/login:
    post:
      consumes:
      - application/json
      description: Authenticate admin user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Admin login
      tags:
      - Authentication
  /api/customer/login:
    post:
      consumes:
      - application/json
      description: Authenticate customer user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Customer login
      tags:
      - Authentication
  /api/customer/signup:
    post:
      consumes:
      - application/json
      description: Register a new customer account
      parameters:
      - description: Signup information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.SignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Customer signup
      tags:
      - Authentication
  /api/v1/admin/customers:
    get:
      consumes:
      - application/json
      description: Get paginated list of all customers
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List customers
      tags:
      - Admin Customer Management
    post:
      consumes:
      - application/json
      description: Create a new customer account
      parameters:
      - description: Customer information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateCustomerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create customer
      tags:
      - Admin Customer Management
  /api/v1/admin/customers/{id}:
    delete:
      consumes:
      - application/json
      description: Soft delete a customer account
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete customer
      tags:
      - Admin Customer Management
    get:
      consumes:
      - application/json
      description: Get customer details by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get customer
      tags:
      - Admin Customer Management
    put:
      consumes:
      - application/json
      description: Update customer information
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated customer information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateCustomerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update customer
      tags:
      - Admin Customer Management
  /api/v1/admin/packs:
    get:
      consumes:
      - application/json
      description: Get paginated list of all subscription packs
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List subscription packs
      tags:
      - Admin Subscription Pack Management
    post:
      consumes:
      - application/json
      description: Create a new subscription pack
      parameters:
      - description: Subscription pack information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreatePackRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create subscription pack
      tags:
      - Admin Subscription Pack Management
  /api/v1/admin/packs/{id}:
    delete:
      consumes:
      - application/json
      description: Soft delete a subscription pack
      parameters:
      - description: Subscription Pack ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete subscription pack
      tags:
      - Admin Subscription Pack Management
    get:
      consumes:
      - application/json
      description: Get subscription pack details by ID
      parameters:
      - description: Subscription Pack ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get subscription pack
      tags:
      - Admin Subscription Pack Management
    put:
      consumes:
      - application/json
      description: Update subscription pack information
      parameters:
      - description: Subscription Pack ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated subscription pack information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdatePackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update subscription pack
      tags:
      - Admin Subscription Pack Management
  /api/v1/admin/subscriptions:
    get:
      consumes:
      - application/json
      description: Get paginated list of all subscriptions
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by customer ID
        in: query
        name: customer_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List subscriptions
      tags:
      - Admin Subscription Management
    post:
      consumes:
      - application/json
      description: Create a new subscription for a customer
      parameters:
      - description: Subscription information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create subscription
      tags:
      - Admin Subscription Management
  /api/v1/admin/subscriptions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a subscription
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete subscription
      tags:
      - Admin Subscription Management
    get:
      consumes:
      - application/json
      description: Get subscription details by ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get subscription
      tags:
      - Admin Subscription Management
  /api/v1/admin/subscriptions/{id}/approve:
    put:
      consumes:
      - application/json
      description: Approve a subscription request
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Approve subscription
      tags:
      - Admin Subscription Management
  /api/v1/admin/subscriptions/{id}/assign:
    put:
      consumes:
      - application/json
      description: Assign an approved subscription to make it active
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Assign subscription
      tags:
      - Admin Subscription Management
  /api/v1/admin/subscriptions/{id}/unassign:
    put:
      consumes:
      - application/json
      description: Unassign an active subscription
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Unassign subscription
      tags:
      - Admin Subscription Management
  /api/v1/customer/profile:
    get:
      consumes:
      - application/json
      description: Get current customer's profile information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get profile
      tags:
      - Customer Profile
    put:
      consumes:
      - application/json
      description: Update current customer's profile information
      parameters:
      - description: Updated profile information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateCustomerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update profile
      tags:
      - Customer Profile
  /api/v1/customer/subscription:
    get:
      consumes:
      - application/json
      description: Get current customer's active subscription
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get current subscription
      tags:
      - Customer Subscription
  /api/v1/customer/subscription/deactivate:
    put:
      consumes:
      - application/json
      description: Deactivate current customer's active subscription
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Deactivate subscription
      tags:
      - Customer Subscription
  /api/v1/customer/subscription/history:
    get:
      consumes:
      - application/json
      description: Get paginated history of current customer's subscriptions
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - default: created_at
        description: Sort field
        in: query
        name: sort
        type: string
      - default: desc
        description: Sort order
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get subscription history
      tags:
      - Customer Subscription
  /api/v1/customer/subscription/request:
    post:
      consumes:
      - application/json
      description: Request a new subscription for current customer
      parameters:
      - description: Subscription request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.SubscriptionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Request subscription
      tags:
      - Customer Subscription
  /sdk/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user for SDK access and return API key
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: SDK login
      tags:
      - SDK Authentication
  /sdk/v1/subscription:
    get:
      consumes:
      - application/json
      description: Get the customer's currently active subscription
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get current subscription
      tags:
      - SDK Subscription
  /sdk/v1/subscription/deactivate:
    put:
      consumes:
      - application/json
      description: Deactivate the customer's current active subscription
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Deactivate subscription
      tags:
      - SDK Subscription
  /sdk/v1/subscription/history:
    get:
      consumes:
      - application/json
      description: Get paginated history of customer's subscriptions
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - default: created_at
        description: Sort field
        in: query
        name: sort
        type: string
      - default: desc
        description: Sort order
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get subscription history
      tags:
      - SDK Subscription
  /sdk/v1/subscription/request:
    post:
      consumes:
      - application/json
      description: Request a new subscription for the customer
      parameters:
      - description: Subscription request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.SubscriptionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Request subscription
      tags:
      - SDK Subscription
securityDefinitions:
  ApiKeyAuth:
    description: API Key for SDK authentication
    in: header
    name: X-API-Key
    type: apiKey
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
